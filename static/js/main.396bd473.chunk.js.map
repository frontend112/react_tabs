{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","onTabSelected","tabs","selectedTabId","tabContent","find","tab","id","content","isIdCorrect","some","className","map","index","title","cn","href","onClick","App","useState","selectedTab","setSelectedTab","tabData","ReactDOM","render","document","getElementById"],"mappings":"kNAYaA,EAAkB,SAAC,GAIzB,IAAD,EAHJC,EAGI,EAHJA,cACAC,EAEI,EAFJA,KACAC,EACI,EADJA,cAEMC,EAAU,UAAGF,EAAKG,MAAK,SAAAC,GAAG,OAC9BA,EAAIC,KAAOJ,YADG,aAAG,EAEfK,QAEEC,EAAsBP,EAAKQ,MAAK,SAACJ,GAAD,OACpCA,EAAIC,KAAOJ,KAGb,OACE,sBAAKQ,UAAU,gBAAgB,UAAQ,cAAvC,UACE,qBAAKA,UAAU,gBAAf,SACE,6BAEIT,EAAKU,KAAI,SAACN,EAAKO,GACb,IAAQN,EAAcD,EAAdC,GAAIO,EAAUR,EAAVQ,MAEZ,OACE,oBACEH,UAAWI,IACT,CACE,YACAZ,IAAkBI,IAEbE,GAAyB,IAAVI,IAGxB,UAAQ,MATV,SAYE,mBACEG,KAAI,WAAMT,GACV,UAAQ,UACRU,QAAS,WACHV,IAAOJ,GACTF,EAAcK,IALpB,SASGQ,KAXEP,UAoBjB,qBAAKI,UAAU,QAAQ,UAAQ,aAA/B,SACGP,QCzDIF,EAAO,CAClB,CAAEK,GAAI,QAASO,MAAO,QAASN,QAAS,eACxC,CAAED,GAAI,QAASO,MAAO,QAASN,QAAS,eACxC,CAAED,GAAI,QAASO,MAAO,QAASN,QAAS,gBAG7BU,EAAU,WACrB,MAAsCC,mBAASjB,EAAK,IAApD,mBAAOkB,EAAP,KAAoBC,EAApB,KAMA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBS,EAAYN,SAGlC,cAAC,EAAD,CACEb,cAXgB,SAACqB,GACrBD,EAAeC,IAWXpB,KAAMA,EACNC,cAAeiB,EAAYb,SC3BnCgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.396bd473.chunk.js","sourcesContent":["import { FC } from 'react';\n\nimport cn from 'classnames';\n\nimport { Tab } from '../../types';\n\ntype Props = {\n  onTabSelected: (tabNr: Tab) => void,\n  tabs: Tab[] | [],\n  selectedTabId: string,\n};\n\nexport const Tabs: FC<Props> = ({\n  onTabSelected,\n  tabs,\n  selectedTabId,\n}) => {\n  const tabContent = tabs.find(tab => (\n    tab.id === selectedTabId\n  ))?.content;\n\n  const isIdCorrect:boolean = tabs.some((tab:Tab) => (\n    tab.id === selectedTabId\n  ));\n\n  return (\n    <div className=\"TabsComponent\" data-cy=\"tab-content\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map((tab, index) => {\n              const { id, title } = tab;\n\n              return (\n                <li\n                  className={cn(\n                    {\n                      'is-active':\n                      selectedTabId === id\n                      // select first tab if selectedTabId is incorrect\n                      || (!isIdCorrect && index === 0),\n                    },\n                  )}\n                  data-cy=\"Tab\"\n                  key={id}\n                >\n                  <a\n                    href={`#${id}`}\n                    data-cy=\"TabLink\"\n                    onClick={() => {\n                      if (id !== selectedTabId) {\n                        onTabSelected(tab);\n                      }\n                    }}\n                  >\n                    {title}\n                  </a>\n                </li>\n              );\n            })\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabContent}\n      </div>\n    </div>\n  );\n};\n","import { FC, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nimport { Tab } from './types';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const onTabSelected = (tabData: Tab) => {\n    setSelectedTab(tabData);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        onTabSelected={onTabSelected}\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}